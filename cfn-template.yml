AWSTemplateFormatVersion: 2010-09-09
Description: |
    CloudFormation Template for Bookstore Application. Bookstore Web API Application aims to create a bookstore web service using Docker  to dockerization of an application. The application code is to be deployed as a RESTful web service with Flask using Dockerfile and Docker Compose on AWS Elastic Compute Cloud (EC2) Instance using AWS Cloudformation Service.
Parameters:
  KeyName:
    Description: Enter the name of your Key Pair for EC2
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription : Must be the name of an existing EC2 KeyPair.

Resources:
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP for Flask Web Server and SSH port to secure connection to my EC2
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  WebServerHost:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0aeeebd8d2ab47354
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub Web Server of ${AWS::StackName}
      UserData: !Base64 |
        #! /bin/bash
        yum update -y
        amazon-linux-extras install docker -y
        systemctl start docker
        systemctl enable docker
        usermod -a -G docker ec2-user
        curl -L "https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)" \
        -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        mkdir -p /home/ec2-user/bookstore-api
        TOKEN="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"
        FOLDER="https://raw.githubusercontent.com/YunusStar/Dockerization-of-Bookstore-Web-API-Python-Flask-with-MySQL/main/Dockerfile"
        curl -s --create-dirs -o "/home/ec2-user/bookstore-api/app.py" -L "$FOLDER"bookstore-api.py
        curl -s --create-dirs -o "/home/ec2-user/bookstore-api/requirements.txt" -L "$FOLDER"requirements.txt
        curl -s --create-dirs -o "/home/ec2-user/bookstore-api/Dockerfile" -L "$FOLDER"Dockerfile
        curl -s --create-dirs -o "/home/ec2-user/bookstore-api/docker-compose.yml" -L "$FOLDER"docker-compose.yml
        cd /home/ec2-user/bookstore-api
        docker build -t dolphinstar121/bookstore-api:latest .
        docker-compose up -d
Outputs:
  WebsiteURL:
    Value: !Sub 
      - http://${PublicAddress}
      - PublicAddress: !GetAtt WebServerHost.PublicDnsName
    Description: Bookstore Application URL